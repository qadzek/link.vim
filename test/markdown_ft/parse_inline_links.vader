Given markdown;
Cum sociis natoque penatibus et magnis dis parturient montes,

Execute (No link):
  let expected = []
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus](http://www.loremipsum.com) et magnis dis parturient montes,

Execute (Single link):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com',
    \ 'length': 38,
    \ 'col_start': 20,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus](http://www.loremipsum.com) et [magnis](http://www.dolorsitamet.com) dis parturient montes,

Execute (Two links):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com',
    \ 'length': 38,
    \ 'col_start': 20,
    \ },
    \ {
    \ 'full_link': '[magnis](http://www.dolorsitamet.com)',
    \ 'link_text': 'magnis',
    \ 'destination': 'http://www.dolorsitamet.com',
    \ 'length': 37,
    \ 'col_start': 62,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
[penatibus](http://www.loremipsum.com) et magnis dis parturient montes

Execute (Link at start of line):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com',
    \ 'length': 38,
    \ 'col_start': 1,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus](http://www.loremipsum.com)

Execute (Link at end of line):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com',
    \ 'length': 38,
    \ 'col_start': 20,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
[penatibus](http://www.loremipsum.com) et [magnis](http://www.dolorsitamet.com)

Execute (Two links, one at start of line, one at end of line):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com',
    \ 'length': 38,
    \ 'col_start': 1,
    \ },
    \ {
    \ 'full_link': '[magnis](http://www.dolorsitamet.com)',
    \ 'link_text': 'magnis',
    \ 'destination': 'http://www.dolorsitamet.com',
    \ 'length': 37,
    \ 'col_start': 43,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus](http://www.loremipsum.com) et [magnis](http://www.dolorsitamet.com) dis [parturient](http://www.adipiscingelitipsum.com) montes,

Execute (Three links):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com',
    \ 'length': 38,
    \ 'col_start': 20,
    \ },
    \ {
    \ 'full_link': '[magnis](http://www.dolorsitamet.com)',
    \ 'link_text': 'magnis',
    \ 'destination': 'http://www.dolorsitamet.com',
    \ 'length': 37,
    \ 'col_start': 62,
    \ },
    \ {
    \ 'full_link': '[parturient](http://www.adipiscingelitipsum.com)',
    \ 'link_text': 'parturient',
    \ 'destination': 'http://www.adipiscingelitipsum.com',
    \ 'length': 48,
    \ 'col_start': 104,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus](http://www.loremipsum.com/foo.html?bar=baz#alfa) et magnis

Execute (Link containing special characters):
  let expected = [
    \ {
    \ 'full_link': '[penatibus](http://www.loremipsum.com/foo.html?bar=baz#alfa)',
    \ 'link_text': 'penatibus',
    \ 'destination': 'http://www.loremipsum.com/foo.html?bar=baz#alfa',
    \ 'length': 60,
    \ 'col_start': 20,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus](http://www.lorem-ipsum.com/foo_bar.html?bar=baz+alpha$bravo!charlie*delta,echo'foxtrot) et magnis

Execute (Link containing more special characters):
  let expected = [
    \ {
    \ 'full_link': "[penatibus](http://www.lorem-ipsum.com/foo_bar.html?bar=baz+alpha$bravo!charlie*delta,echo'foxtrot)",
    \ 'link_text': 'penatibus',
    \ 'destination': "http://www.lorem-ipsum.com/foo_bar.html?bar=baz+alpha$bravo!charlie*delta,echo'foxtrot",
    \ 'length': 99,
    \ 'col_start': 20,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
volutpat. [Donec](www.donec.org) odio. Quisque nunc. [Integer](http://integ.er) cursus [feugiat](www.feugi.at) magna

Execute (Long line):
  let expected = [
    \ {
    \ 'full_link': "[Donec](www.donec.org)",
    \ 'link_text': 'Donec',
    \ 'destination': "www.donec.org",
    \ 'length': 22,
    \ 'col_start': 11,
    \ },
    \ {
    \ 'full_link': "[Integer](http://integ.er)",
    \ 'link_text': 'Integer',
    \ 'destination': "http://integ.er",
    \ 'length': 26,
    \ 'col_start': 54,
    \ },
    \ {
    \ 'full_link': "[feugiat](www.feugi.at)",
    \ 'link_text': 'feugiat',
    \ 'destination': "www.feugi.at",
    \ 'length': 23,
    \ 'col_start': 88,
    \ }
  \ ]
  let actual = link#ParseLineInBodyFor('inline', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
