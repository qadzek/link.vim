Before:
  messages clear

Given markdown:
  Nascetur [ridiculus][0] mus.

  ## Links

  [0]: https://www.vim.org/
~~~~~~~~~~~~~~~~~~~~~~~~~

Execute (Regular URL):
  LinkOpen
  AssertEqual 0, v:shell_error

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown:
  Nascetur [ridiculus][0] mus.

  ## Links

  [0]: https://en.wikipedia.org/wiki/Giro_d%27Italia
~~~~~~~~~~~~~~~~~~~~~~~~~

Execute (URL containing percent-encoding):
  LinkOpen
  AssertEqual 0, v:shell_error

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown:
  Nascetur [ridiculus][0] mus.

  ## Links

  [0]: https://en.wikipedia.org/wiki/Giro_d%27Italia#Defunct_classifications
~~~~~~~~~~~~~~~~~~~~~~~~~

Execute (URL containing percent-encoding and hash sign):
  LinkOpen
  AssertEqual 0, v:shell_error

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown:
  Nascetur [ridiculus][0] mus.

  ## Links

  [0]: https://www.mobileread.com/forums/showthread.php?p=1769412
~~~~~~~~~~~~~~~~~~~~~~~~~

Execute (URL containing question mark):
  LinkOpen
  AssertEqual 0, v:shell_error

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown:
  Nascetur [ridiculus][0] mus.

  ## Links

  [0]: https://www.mobileread.com/forums/showpost.php?p=1769412&postcount=1
~~~~~~~~~~~~~~~~~~~~~~~~~

Execute (URL containing question mark and ampersand):
  LinkOpen
  AssertEqual 0, v:shell_error

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
# A consectetuer nunc justo ac nisl.

## Nam vitae purus

Cum sociis natoque penatibus et magnis dis parturient montes,
nascetur ridiculus mus.

## Links

[0]: http://www.loremipsumdolorsitamet.com
~~~~~~~~~~~~~~~~~~~~~~~~~
Execute (From reference section):
  call cursor('$', 1)
  LinkOpen
  let expected = g:link#globals#errors['not_from_ref']
  let actual = split( execute('messages'), '\n')[-1]
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
# A consectetuer nunc justo ac nisl.

## Nam vitae purus

Cum sociis [natoque][0] penatibus et magnis dis parturient montes,
nascetur ridiculus mus.

Praesent semper magna. In eu justo. Nunc vitae risus nec
sem scelerisque consequat. In hac habitasse platea dictumst. Nam posuere

## Links

[0]: loremipsumdolorsitamet.com
~~~~~~~~~~~~~~~~~~~~~~~~~
Execute (No reference link on line):
  LinkOpen
  let expected = g:link#globals#errors['no_reference_link']
  let actual = split( execute('messages'), '\n')[-1]
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
# A consectetuer nunc justo ac nisl.

## Nam vitae purus

Cum sociis [natoque][0] penatibus et magnis dis parturient montes,
nascetur ridiculus mus.

Praesent semper magna. In eu justo. Nunc vitae risus nec
sem scelerisque consequat. In hac habitasse platea dictumst. Nam posuere

## Links

[0]: loremipsum.com
~~~~~~~~~~~~~~~~~~~~~~~~~
Execute (No valid URL: does not start with a protocol like 'http' or with 'www'):
  call cursor(5, 1)
  LinkOpen
  let expected = g:link#globals#errors['no_valid_url'] .. ' loremipsum.com'
  let actual = split( execute('messages'), '\n')[-1]
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
