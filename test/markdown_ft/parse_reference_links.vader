Given markdown;
Cum sociis natoque penatibus et magnis dis parturient montes,

Execute (No link):
  let expected = []
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus][3] et magnis dis parturient montes,

Execute (Single link):
  let expected = [
    \ {
    \ 'full_link': '[penatibus][3]',
    \ 'link_text': 'penatibus',
    \ 'destination': '3',
    \ 'length': 14,
    \ 'col_start': 20,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus][3] et [magnis][5] dis parturient montes,

Execute (Two links):
  let expected = [
    \ {
    \ 'full_link': '[penatibus][3]',
    \ 'link_text': 'penatibus',
    \ 'destination': '3',
    \ 'length': 14,
    \ 'col_start': 20,
    \ },
    \ {
    \ 'full_link': '[magnis][5]',
    \ 'link_text': 'magnis',
    \ 'destination': '5',
    \ 'length': 11,
    \ 'col_start': 38,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
[penatibus][3] et magnis dis parturient montes

Execute (Link at start of line):
  let expected = [
    \ {
    \ 'full_link': '[penatibus][3]',
    \ 'link_text': 'penatibus',
    \ 'destination': '3',
    \ 'length': 14,
    \ 'col_start': 1,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus][3]

Execute (Link at end of line):
  let expected = [
    \ {
    \ 'full_link': '[penatibus][3]',
    \ 'link_text': 'penatibus',
    \ 'destination': '3',
    \ 'length': 14,
    \ 'col_start': 20,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
[penatibus][3] et [magnis][5]

Execute (Two links, one at start of line, one at end of line):
  let expected = [
    \ {
    \ 'full_link': '[penatibus][3]',
    \ 'link_text': 'penatibus',
    \ 'destination': '3',
    \ 'length': 14,
    \ 'col_start': 1,
    \ },
    \ {
    \ 'full_link': '[magnis][5]',
    \ 'link_text': 'magnis',
    \ 'destination': '5',
    \ 'length': 11,
    \ 'col_start': 19,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Cum sociis natoque [penatibus][0] et [magnis][1] dis [parturient][2] montes,

Execute (Three links):
  let expected = [
    \ {
    \ 'full_link': '[penatibus][0]',
    \ 'link_text': 'penatibus',
    \ 'destination': '0',
    \ 'length': 14,
    \ 'col_start': 20,
    \ },
    \ {
    \ 'full_link': '[magnis][1]',
    \ 'link_text': 'magnis',
    \ 'destination': '1',
    \ 'length': 11,
    \ 'col_start': 38,
    \ },
    \ {
    \ 'full_link': '[parturient][2]',
    \ 'link_text': 'parturient',
    \ 'destination': '2',
    \ 'length': 15,
    \ 'col_start': 54,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
Ultrices posuere cubilia Curae; Curabitur consequat leo et dui. Aenean ligula mi, interdum a, dolor. volutpat. [Donec][0] odio. Quisque nunc. [Integer][1] cursus [feugiat][2] magna

Execute (Long line):
  let expected = [
    \ {
    \ 'full_link': '[Donec][0]',
    \ 'link_text': 'Donec',
    \ 'destination': '0',
    \ 'length': 10,
    \ 'col_start': 112,
    \ },
    \ {
    \ 'full_link': '[Integer][1]',
    \ 'link_text': 'Integer',
    \ 'destination': '1',
    \ 'length': 12,
    \ 'col_start': 143,
    \ },
    \ {
    \ 'full_link': '[feugiat][2]',
    \ 'link_text': 'feugiat',
    \ 'destination': '2',
    \ 'length': 12,
    \ 'col_start': 163,
    \ }
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given markdown;
volutpat. [Donec](www.donec.org) odio. Quisque nunc. [Integer][0] cursus [feugiat](www.feugi.at) magna

Execute (Mix of inline and reference links):
  let expected = [
    \ {
    \ 'full_link': '[Integer][0]',
    \ 'link_text': 'Integer',
    \ 'destination': '0',
    \ 'length': 12,
    \ 'col_start': 54,
    \ },
  \ ]
  let actual = mdlink#ParseLineInBodyFor('reference', 1)
  AssertEqual expected, actual

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
