" Calling functions is required here; the commands are unknown because of the
" gitcommit resource

Before:
  edit resources/gitcommit_converted.gitcommit
  normal! gg
  unlet! g:md_link_heading
  unlet! b:md_link_heading
  unlet! b:md_link_heading_before
  unlet! b:md_link_skip_line
After:
  unlet! g:md_link_heading
  unlet! b:md_link_heading
  unlet! b:md_link_heading_before
  unlet! b:md_link_skip_line

==============================================
Execute ():
  Log 'From document body to reference section'
==============================================

Execute (Valid jump, from single reference link on line, [0]):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  call cursor(6, 1)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 17
  AssertEqual col_nr, 6

Execute (Valid jump, from second reference link on line, [5]):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  call cursor(8, 24)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 20
  AssertEqual col_nr, 6

Execute (Invalid jump, no reference link on line):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  call cursor(3, 5)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 3
  AssertEqual col_nr, 5

Execute (Invalid jump, single reference link on line with no corresponding link reference definition, [1]):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  18 delete
  call cursor(7, 1)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 7
  AssertEqual col_nr, 1
  undo

==============================================
Execute ():
  Log 'From reference section to document body'
==============================================

Execute (Valid jump, to a line with a single link, [0]):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  call cursor(17, 1)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 6
  AssertEqual col_nr, 20

Execute (Valid jump, to a line with multiple links, [3]):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  call cursor(20, 25)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 8
  AssertEqual col_nr, 51

Execute (Invalid jump, no corresponding reference link, [1]):
  let b:md_link_heading = 'Links:'
  let b:md_link_heading_before = '^# Please enter'
  7 delete
  call cursor(17, 1)
  call mdlink#Jump('jump')
  let [line_nr, col_nr] = getcurpos()[1:2]
  AssertEqual line_nr, 17
  AssertEqual col_nr, 1
  undo
