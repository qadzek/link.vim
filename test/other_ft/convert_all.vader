Before:
  unlet! g:link_heading
  unlet! b:link_heading
  unlet! b:link_heading_before
  unlet! b:link_skip_line
After:
  unlet! g:link_heading
  unlet! b:link_heading
  unlet! b:link_heading_before
  unlet! b:link_skip_line

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given mail:
  www.bar.com
  Fluke furl ftp://ftp.bar.net scuttle coffer
  file://path/to/file.txt hang the jib spyglass driver crack Jennys tea cup.
  Quarterdeck run a http://www.bar.com
  rig Jolly Roger https://bar.org gangway http://192.0.2.1 no prey,
  no pay pirate quarter log http://subdomain.bar.com
  schooner draft https://bar.travel
  http://bar.very123longtld
  Scurvy Admiral of the Black spirits clipper http://www.ba-r.com Nipperkin
  http://bar.com:8080 Jolly Roger matey hulk aye
  http://bar.com/baz
  booty provost killick bounty http://bar.com/index.html
  http://www.parameters.org/page2014.html?utm_source=facebook&utm_medium=eventlinkonwall&utm_term=trapshoot&utm_content=calendar_event_on_wall&utm_campaign=trapshoot2014
  bar
  bar.com
  Line containing something resembling an inline link: command! -buffer -range=% -bar TagLinks silent keeppatterns <line1>,<line2>substitute#\v%(\[[^\]]+\]\(\s*)@<!\zs<https?://([^.]+)\S+#[\1](\0)#giep
Execute (Convert all URLs in a mail buffer):
  let b:link_heading = 'Links:'
  LinkConvertAll

Expect mail:
  [0]
  Fluke furl [1] scuttle coffer
  [2] hang the jib spyglass driver crack Jennys tea cup.
  Quarterdeck run a [3]
  rig Jolly Roger [4] gangway [5] no prey,
  no pay pirate quarter log [6]
  schooner draft [7]
  [8]
  Scurvy Admiral of the Black spirits clipper [9] Nipperkin
  [10] Jolly Roger matey hulk aye
  [11]
  booty provost killick bounty [12]
  [13]
  bar
  bar.com
  Line containing something resembling an inline link: command! -buffer -range=% -bar TagLinks silent keeppatterns <line1>,<line2>substitute#\v%(\[[^\]]+\]\(\s*)@<!\zs<https?://([^.]+)\S+#[\1](\0)#giep

  Links:

  [0]: www.bar.com
  [1]: ftp://ftp.bar.net
  [2]: file://path/to/file.txt
  [3]: http://www.bar.com
  [4]: https://bar.org
  [5]: http://192.0.2.1
  [6]: http://subdomain.bar.com
  [7]: https://bar.travel
  [8]: http://bar.very123longtld
  [9]: http://www.ba-r.com
  [10]: http://bar.com:8080
  [11]: http://bar.com/baz
  [12]: http://bar.com/index.html
  [13]: http://www.parameters.org/page2014.html?utm_source=facebook&utm_medium=eventlinkonwall&utm_term=trapshoot&utm_content=calendar_event_on_wall&utm_campaign=trapshoot2014

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given gitcommit:
  Update README.md with project documentation links
  
  This commit updates the README.md file to include links to various project
  documentation resources. The documentation includes:
  
  1. Project Wiki: https://github.com/example/project/wiki
  2. API Documentation: https://api.example.com/docs
  3. User Guide: https://docs.example.com/user-guide
  4. Developer Documentation: https://docs.example.com/developer-guide
  
  Each link provides access to specific documentation sections relevant to
  different stakeholders involved in the project. This update ensures that
  stakeholders can easily access the necessary documentation directly from the
  project's README file.

  # Please enter the commit message for your changes. Lines starting
  # with '#' will be ignored, and an empty message aborts the commit.
  #
  # On branch main
  # Changes to be committed:
  #	modified:   README.md
  #
Execute (Convert all URLs in a gitcommit buffer, reposition reference section):
  let b:link_heading = 'Links:'
  let b:link_heading_before = '^# Please enter'
  LinkConvertAll

Expect gitcommit:
  Update README.md with project documentation links
  
  This commit updates the README.md file to include links to various project
  documentation resources. The documentation includes:
  
  1. Project Wiki: [0]
  2. API Documentation: [1]
  3. User Guide: [2]
  4. Developer Documentation: [3]
  
  Each link provides access to specific documentation sections relevant to
  different stakeholders involved in the project. This update ensures that
  stakeholders can easily access the necessary documentation directly from the
  project's README file.

  Links:

  [0]: https://github.com/example/project/wiki
  [1]: https://api.example.com/docs
  [2]: https://docs.example.com/user-guide
  [3]: https://docs.example.com/developer-guide

  # Please enter the commit message for your changes. Lines starting
  # with '#' will be ignored, and an empty message aborts the commit.
  #
  # On branch main
  # Changes to be committed:
  #	modified:   README.md
  #
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given mail:
  www.bar.com
  Fluke furl ftp://ftp.bar.net scuttle coffer
  file://path/to/file.txt hang the jib spyglass driver crack Jennys tea cup.
  > Quarterdeck run a http://www.bar.com
  > rig Jolly Roger https://bar.org gangway http://192.0.2.1 no prey,
  > no pay pirate quarter log http://subdomain.bar.com
  schooner draft https://bar.travel
~~~~~
Execute (Skip some lines in a mail buffer):
  let b:link_skip_line = '^>'
  let b:link_heading = 'Links:'
  LinkConvertAll
~~~~~
Expect mail:
  [0]
  Fluke furl [1] scuttle coffer
  [2] hang the jib spyglass driver crack Jennys tea cup.
  > Quarterdeck run a http://www.bar.com
  > rig Jolly Roger https://bar.org gangway http://192.0.2.1 no prey,
  > no pay pirate quarter log http://subdomain.bar.com
  schooner draft [3]

  Links:

  [0]: www.bar.com
  [1]: ftp://ftp.bar.net
  [2]: file://path/to/file.txt
  [3]: https://bar.travel
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given gitcommit:
  Git commit title

  Git https://comm.it body
  Body continued

  # Please enter the commit message for your changes. Lines starting
  # with '#' will be ignored, and an empty message aborts the commit.
  #
  # On branch main
  # Changes to be committed:
  #	modified:   foo.txt
  #
~~~~~
Execute (Gitcommit buffer, custom heading, repositioned reference section):
  let b:link_heading = 'Links:'
  let b:link_heading_before = '^# Please enter'
  LinkConvertAll
~~~~~
Expect gitcommit:
  Git commit title

  Git [0] body
  Body continued

  Links:

  [0]: https://comm.it

  # Please enter the commit message for your changes. Lines starting
  # with '#' will be ignored, and an empty message aborts the commit.
  #
  # On branch main
  # Changes to be committed:
  #	modified:   foo.txt
  #
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Given mail:
  Hi Recipient,
  
  I hope this email https://email.com finds you well.
  
  Best regards,
  Your Name
  
  --
  Your Job Title
  Your Company Name
  Your Contact Information
~~~~~
Execute (Mail buffer):
  let b:link_heading = 'Links:'
  let b:link_heading_before = '^--'
  LinkConvertAll
~~~~~
Expect mail:
  Hi Recipient,
  
  I hope this email [0] finds you well.
  
  Best regards,
  Your Name
  
  Links:

  [0]: https://email.com

  --
  Your Job Title
  Your Company Name
  Your Contact Information
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Given mail:
  Subject: Join Our Webinar Series!
  
  Hi John,
  
  Exciting news! We're hosting a series of webinars on Vim and Neovim. Here's
  the schedule:
  
  Intro to Vim: Join here: https://vim.com/webinar1 or https://vimbackup.com/webinar1
  Advanced Vim Techniques: Join here: www.vim.com/webinar2
  Q&A with Experts: Join here: http://vim.com/webinar3

  Intro to Neovim: Join here: https://neovim.com/webinar1 or https://neovimbackup.com/webinar1
  > Advanced Neovim Techniques: Join here: www.neovim.com/webinar2
  Q&A with Experts: Join here: http://neovim.com/webinar3

  Don't miss out — register now! Let us know if you have any questions.
  
  Cheers,
  Jane
~~~~~
Execute (Mail buffer):
  let b:link_heading = 'Full Links:'
  let b:link_heading_before = '^Cheers'
  let b:link_skip_line = '^>'
  LinkConvertAll
~~~~~
Expect mail:
  Subject: Join Our Webinar Series!
  
  Hi John,
  
  Exciting news! We're hosting a series of webinars on Vim and Neovim. Here's
  the schedule:
  
  Intro to Vim: Join here: [0] or [1]
  Advanced Vim Techniques: Join here: [2]
  Q&A with Experts: Join here: [3]

  Intro to Neovim: Join here: [4] or [5]
  > Advanced Neovim Techniques: Join here: www.neovim.com/webinar2
  Q&A with Experts: Join here: [6]

  Don't miss out — register now! Let us know if you have any questions.

  Full Links:
  
  [0]: https://vim.com/webinar1
  [1]: https://vimbackup.com/webinar1
  [2]: www.vim.com/webinar2
  [3]: http://vim.com/webinar3
  [4]: https://neovim.com/webinar1
  [5]: https://neovimbackup.com/webinar1
  [6]: http://neovim.com/webinar3

  Cheers,
  Jane
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
