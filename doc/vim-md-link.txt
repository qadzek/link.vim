*vim-md-link.txt* Convert inline Markdown links to reference links

                                                                     *md-link*
               _                               _       _ _       _~
        __   _(_)_ __ ___        _ __ ___   __| |     | (_)_ __ | | __~
        \ \ / / | '_ ` _ \ _____| '_ ` _ \ / _` |_____| | | '_ \| |/ /~
         \ V /| | | | | | |_____| | | | | | (_| |_____| | | | | |   <~
          \_/ |_|_| |_| |_|     |_| |_| |_|\__,_|     |_|_|_| |_|_|\_\~


Version: 1.0.1
Author:  qadzek
License: MIT

==============================================================================
CONTENTS                                                    *md-link-contents*

    1. Introduction ......... |md-link-introduction|
    2. Usage ................ |md-link-usage|
    3. Mappings ............. |md-link-mappings|
    4. Configuration ........ |md-link-configuration|
    5. Extensions ........... |md-link-extensions|
    6. Issues ............... |md-link-issues|
    7. Contributing ......... |md-link-contributing|
    8. Changelog ............ |md-link-changelog|
    9. Credits .............. |md-link-credits|

==============================================================================
INTRODUCTION                                            *md-link-introduction*

Reference links allow for cleaner Markdown documents. Storing URLs at
the bottom of your document helps maintain the flow of the body of the text.
However, managing them manually can be tedious. This plugin for Vim and Neovim
helps in converting these links, navigating between the document body and the
reference section, quickly previewing hidden URLs, and deleting unnecessary
links from the reference section.

The main command will convert >
  # Notes

  [Vim](https://www.vim.org) and [Neovim](https://neovim.io) are text editors.
<
into >
  # Notes

  [Vim][0] and [Neovim][1] are text editors.

  ## Links

  [0]: https://www.vim.org
  [1]: https://neovim.io
<
A heading is used to mark the divide between the document body and the
reference section. It will be automatically added if needed.

Terminology~

  - inline link:               `[Vim](https://www.vim.org)`
  - reference link:            `[Vim][0]`
  - link text:                 `[Vim]`
  - label:                     `[0]`
  - link reference definition: `[0]: https://www.vim.org`
  - plaintext link:            `Try Vim as your editor: https://www.vim.org`
  - heading:                   `## Links`
  - document body:     part of buffer above heading, containing the main text
  - reference section: part of buffer below heading, containing link reference
                       definitions

For more information, see the CommonMark Specification at
https://spec.commonmark.org/0.31.2/#links

==============================================================================
USAGE                                                          *md-link-usage*

The vim-md-link plugin exposes the following commands:

:MdLinkConvertSingle                                    *:MdLinkConvertSingle*
    Convert one inline link on the current line of the document body to a
    reference link. Add a heading below the document body if needed. If there
    are multiple links on the current line, pick the (first) link that is
    positioned on the cursor or behind the cursor.

:MdLinkConvertSingleInsert                        *:MdLinkConvertSingleInsert*
    Same as above; intended to be used with an Insert mode mapping. Return to
    Insert mode and position the cursor just outside the reference link.

:MdLinkConvertRange                                      *:MdLinkConvertRange*
    Convert all inline links within a range to reference links. Add a
    heading below the document body if needed. Intended to be used after
    selecting lines in Visual mode `:'<,'>MdLinkConvertRange` or with an
    explicit range `:5,12 MdLinkConvertRange`

:MdLinkConvertAll                                          *:MdLinkConvertAll*
    Convert all inline links in the document body to reference links. Add a
    heading below the document body if needed.

:MdLinkOpen                                                      *:MdLinkOpen*
    For a reference link within the document body, open the URL of the
    corresponding link reference definition in the default browser.

:MdLinkPeek                                                      *:MdLinkPeek*
    For a reference link within the document body, show a preview of the
    corresponding link reference definition.

:MdLinkJump                                                      *:MdLinkJump*
    Move the cursor from a reference link within the document body to a
    corresponding link reference definition in the reference section, and the
    other way around.

:MdLinkReformat                                              *:MdLinkReformat*
    Reformat reference links and reference section. This includes:

    - Renumber in document body and in reference section: >
        [Vim][1] is a text editor.
        [Neovim][0] is another one.

        ## Links

        [0]: https://neovim.io
        [1]: https://www.vim.org
<      is turned into >
        [Vim][0] is a text editor.
        [Neovim][1] is another one.

        ## Links

        [0]: https://www.vim.org
        [1]: https://neovim.io
<
    - Merge links using the same URL: >
        [Vim][0] is a text editor.
        Bram Moolenaar created [Vim][1].

        ## Links

        [0]: https://www.vim.org
        [1]: https://www.vim.org
<      is turned into >
        [Vim][0] is a text editor.
        Bram Moolenaar created [Vim][0].

        ## Links

        [0]: https://www.vim.org
<
    - Delete link reference definitions that are no longer needed: >
        [Vim][0] is a text editor.
        Neovim is another one.

        ## Links

        [0]: https://www.vim.org
        [1]: https://neovim.io
<      is turned into >
        [Vim][0] is a text editor.
        Neovim is another one.

        ## Links

        [0]: https://www.vim.org
<
    - Mark missing links as '???': >
        [Vim][0] is a text editor.
        [Neovim][1] is another one.

        ## Links

        [0]: https://www.vim.org
<      is turned into >
        [Vim][0] is a text editor.
        [Neovim][???] is another one.

        ## Links

        [0]: https://www.vim.org
<
==============================================================================
MAPPINGS                                                    *md-link-mappings*

By default, no mappings are specified, in order to avoid conflicts with
existing key bindings. Some suggestions for your `.vimrc`:
>
  augroup vim_md_link
    autocmd!
    autocmd Filetype markdown :call MdLinkAddKeyBindings()
  augroup END

  function! MdLinkAddKeyBindings()
    nnoremap <buffer> <silent> <LocalLeader>s   :MdLinkConvertSingle<CR>
    inoremap <buffer> <silent> <C-g>       <Esc>:MdLinkConvertSingleInsert<CR>
    vnoremap <buffer> <silent> <LocalLeader>r   :MdLinkConvertRange<CR>
    nnoremap <buffer> <silent> <LocalLeader>a   :MdLinkConvertAll<CR>
    nnoremap <buffer> <silent> <LocalLeader>o   :MdLinkOpen<CR>
    nnoremap <buffer> <silent> <LocalLeader>j   :MdLinkJump<CR>
    nnoremap <buffer> <silent> <LocalLeader>p   :MdLinkPeek<CR>
    nnoremap <buffer> <silent> <LocalLeader>f   :MdLinkReformat<CR>
  endfunction
<
To ensure these bindings are only applied for Markdown files, they are wrapped
in an |autocmd| group.

Any combination should work, but `<LocalLeader>` is a natural choice, as this
is a filetype plugin (it only works for Markdown documents). By default, if it
is not set or empty, a backslash is used. To view the current <LocalLeader>:
`echo maplocalleader` . To set <LocalLeader> explicitly to, for example, the
backslash character: `let maplocalleader = "\\"` . See `:help maplocalleader`
for more information.

==============================================================================
CONFIGURATION                                          *md-link-configuration*

                                                           *g:md_link_heading*
By default, the heading `## Links` will be used to mark the divide between the
document body and the reference section. To modify this heading, add something
like this to your `.vimrc`:
  `let g:md_link_heading = '# My Resources'`

                                                       *g:md_link_start_index*
By default, the first converted link gets a label of 0. To change this:
  `let g:md_link_start_index = 100`

==============================================================================
EXTENSIONS                                                *md-link-extensions*

By default, this plugin only operates on Markdown buffers, containing inline
links in the Markdown format, e.g. `[Vim](https://www.vim.org)`

It's possible to extend the plugin to other filetypes, containing plaintext
links, e.g. `Try Vim as your editor: https://www.vim.org`

To make this plugin's commands available to for instance `mail` buffers,
create `~/.vim/ftplugin/mail.vim` with the following contents:
>
  if !empty(findfile('ftplugin/markdown/vim-md-link.vim', &runtimepath))
    runtime ftplugin/markdown/vim-md-link.vim
  endif

  if exists(':MdLinkConvertAll') != 2 | finish | endif
<
To use the suggested key bindings for additional filetypes, add the filetype
to the line mentioned in |md-link-mappings|:
>
  autocmd Filetype markdown,mail,gitcommit :call MdLinkAddKeyBindings()
<
                                                           *b:md_link_heading*
Inside the `ftplugin` file, you can specify the heading that will mark the
divide between the document body and the reference section. This heading will
only be used for that particular filetype.
  `let b:md_link_heading = 'Links:'`

                                                    *b:md_link_heading_before*
Inside the `ftplugin` file, you can specify a pattern to which the cursor will
be moved before the heading is added. This regular expression is matched from
the bottom of the document. By default, the heading is added to the last line.
This variable allows to position the heading, and the entire reference
section, elsewhere. E.g. for a `gitcommit` buffer:
  `let b:md_link_heading_before = '^# Please enter the commit message'`

                                                         *b:md_link_skip_line*
By default, links in lines matching |commentstring| are not converted. Inside
the `ftplugin` file, you can modify this pattern. E.g. to skip blockquotes:
  `let b:md_link_skip_line = '^>'`

For examples of how users have extended this plugin, for instance to
`gitcommit` buffers, see the Wiki:
https://github.com/qadzek/vim-md-link/wiki

==============================================================================
ISSUES                                                        *md-link-issues*

- Using a blank line as heading is currently not supported.
- When converting an inline link to a reference link, a link reference
  definition will be created, even if the same URL were already present in the
  reference section. It would be better if the same label were reused.
- URLs containing the `*` character are not supported.

==============================================================================
CONTRIBUTING                                            *md-link-contributing*

Pull requests are welcome.
The Vint linter, the Vader test framework and the Google Style Guide are being
used.

https://github.com/Vimjas/vint
https://github.com/junegunn/vader.vim
https://google.github.io/styleguide/vimscriptguide.xml
https://google.github.io/styleguide/vimscriptfull.xml

To analyze the code for issues: `vint **/*.vim`
To execute the tests: `./test/run_tests.sh`

==============================================================================
CHANGELOG                                                  *md-link-changelog*

1.0.1   2024-05-06
        - Remove :MdLinkDelete                                 BREAKING CHANGE
        - Add :MdLinkReformat to renumber, merge and delete links

1.0.0   2024-05-04
        - Remove pre- and post-processing commands             BREAKING CHANGE
        - Add native support for plaintext links
        - Rename :MdLinkDeleteUnneededRefs                     BREAKING CHANGE

0.5.0   2024-04-17
        - Allow positioning of reference section
        - Add pre- and post-processing of plaintext links
        - Allow lines to be skipped if pattern matches

0.4.1   2024-04-10
        - Fix cursor position not getting restored (#9)

0.4.0   2024-04-08
        - Allow buffer-local heading (#7)

0.3.1   2024-04-08
        - Fix too lenient regex for inline links (#4)

0.3.0   2024-04-05
        - Add :MdLinkConvertRange (#2)

0.2.0   2024-03-19
        - Add :MdLinkOpen

0.1.0	2024-03-15
        - Initial version

==============================================================================
CREDITS                                                      *md-link-credits*

Learn Vimscript the Hard Way by Steve Losh:
https://learnvimscriptthehardway.stevelosh.com/

Contributors and their GitHub usernames:
- Enno (@Konfekt)

==============================================================================

vim:tw=78:ts=8:ft=help:norl:
